#!/bin/bash
EMAIL=mariano.zunino@stuzo.com
DISCONNECT_MODE=false
MODE_TEXT="[Connect Mode]"

# check if flag -d is present
if [ "$1" == "-d" ]; then
  DISCONNECT_MODE=true
  MODE_TEXT="[Disconnect Mode]"
fi

NOTIFICATION_TITLE="$MODE SDM"

# $1: Email
function store_password() {
  local password=$(zenity --entry --title="SDM Password" --text="Enter your SDM password" --hide-text)
  echo $EMAIL | secret-tool store --label="SDM UI" email $password type sdm-credential
  echo "$password"
}

# $1: email
function get_password() {
  local password=$(secret-tool lookup type sdm-credential email $EMAIL)
  # if no password is found, then ask for it
  if [ -z "$password" ]; then
    password=$(store_password $EMAIL)
  fi
  echo "$password"
}

function authenticate() {
  data=$(sdm status 2>/dev/null)
  if [ $? -ne 0 ]; then
    notify-send -u normal "$NOTIFICATION_TITLE" "No session was found, signing in... üîë"
    local password=`get_password`
    echo "$password" | sdm login --email $EMAIL > /dev/null
    if [ $? -ne 0 ]; then
      notify-send -u critical "$NOTIFICATION_TITLE" "Login failed! üò±"
      exit 1
    fi
    notify-send -u normal "$NOTIFICATION_TITLE" "Logged in successfully! üéâ"
  fi
}


function get_status_data() {
  local data=$(sdm status |\
    grep -v "eks" |\
    sed 's/not connected/not_connected/g' |\
    grep connected |\
    tr -s ' ' |\
    cut -d ' ' -f 2,3,4 |\
    sort -k 2 |\
    awk '{print $2,$1,$3}' |\
    sed 's/^connected/‚ö°/g' |\
    column -t -s ' ' -o ' '
  )
  echo "$data"
}

function show_menu() {
  local status_data=$1
  local selected_option=$(echo "$status_data" | rofi -dmenu -p "Select Service" -i -sort -matching fuzzy -markup-rows)

  local status=$(echo $selected_option | cut -d ' ' -f 1)
  local cluster=$(echo $selected_option | cut -d ' ' -f 2)
  local port=$(echo $selected_option | cut -d ' ' -f 3)

  if [ -z "$cluster" ]; then
    exit 0
  fi

  if [ $DISCONNECT_MODE = true ]; then
    notify-send -u normal "$NOTIFICATION_TITLE" "Disconnecting from $cluster...‚è≥"
    sdm disconnect $cluster > /dev/null
    if [ $? -ne 0 ]; then
      notify-send -u critical "$NOTIFICATION_TITLE" "Disconnect failed! üò±"
      exit 1
    fi
    notify-send -u normal "$NOTIFICATION_TITLE" "‚ùå Disconnected successfully!"
    exit 0
  else
    if [ "$status" = "‚ö°" ]; then
      notify-send -u normal "$NOTIFICATION_TITLE" "Copying port <b>$port</b> to clipboard... üìã"
      xclip -selection clipboard -i <<< "$port"
      exit 0
    fi
    notify-send -u normal "$NOTIFICATION_TITLE" "Connecting to <b>$cluster</b> üîå"
    sdm connect $cluster
    if [ $? -eq 0 ]; then
      notify-send -u normal "$NOTIFICATION_TITLE" "Connected to <b>$cluster</b> on port <b>$port</b> ‚ö°"
      xclip -selection clipboard -i <<< "$port"
    else
      notify-send -u critical "$NOTIFICATION_TITLE" "Failed to connect to <b>$cluster</b> üò±"
    fi
  fi
}

function show_disconnect_menu() {
  local status_data=$(get_status_data)
  # remove the "not_connected" lines
  status_data=$(echo "$status_data" | grep -v not_connected)
  show_menu "$status_data"
}

function show_connect_menu() {
  local status_data=$(get_status_data)
  # replace the "not_connected" lines with the "üîå" emoji
  status_data=$(echo "$status_data" | sed 's/not_connected/üîå/g')
  show_menu "$status_data"
}


function main() {
  authenticate
  notify-send -u normal "$NOTIFICATION_TITLE" "Getting results from SDM...‚è≥" -t 1700
  if [ $DISCONNECT_MODE = true ]; then
    show_disconnect_menu
  else
    show_connect_menu
  fi
}

# check if every dependency is installed
function check_dependencies(){
  local dependencies=(
    "sdm" 
    "rofi"
    "xclip" 
    "zenity" 
    "awk" 
    "cut" 
    "grep" 
    "sed" 
    "sort" 
    "tr"
    "notify-send" 
    "secret-tool"
  )
  for dependency in "${dependencies[@]}"; do
    if ! command -v $dependency &> /dev/null; then
      echo "$dependency could not be found"
      exit 1
    fi
  done
}

check_dependencies
main

